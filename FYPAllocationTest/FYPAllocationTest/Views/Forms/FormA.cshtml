@model FYPAllocationTest.ViewModels.Supervisor_AreaViewModel

@{
    ViewData["Title"] = "FormA";
}
<!DOCTYPE html>
<html>
<head>
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="~/js/Filter.js"></script>

</head>

<body>

    <h1 class="align-content-center">Form A: Student Submission</h1>
    <form>
        <div class="row">
            <div class="col">
                <label for="input1">Name and Surname</label>
                <input type="text" class="form-control" id="input1" placeholder="Full name">
            </div>
            <div class="col">
                <label for="input2">ID Number</label>
                <input type="text" class="form-control" id="input2" placeholder="######Z">
            </div>
        </div>
        <div class="form-group">
            <label for="select6">Preference 1</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref1",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area1",
                @class = "form-control"
            })

        </div>
        <div class="form-group">
            <label for="select6">Preference 2</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref2",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area2",
                @class = "form-control"
            })

        </div>
        <div class="form-group">
            <label for="select6">Preference 3</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref3",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area3",
                @class = "form-control"
            })

        </div>
        <div class="form-group">
            <label for="select6">Preference 4</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref4",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area4",
                @class = "form-control"
            })

        </div>
        <div class="form-group">
            <label for="select6">Preference 5</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref5",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area5",
                @class = "form-control"
            })

        </div>
        <div class="form-group">
            <label for="select6">Preference 6</label>
            @Html.DropDownList("supervisors", ViewBag.supervisors as List<SelectListItem>, "Supervisor/s", new
            {
                @id = "pref6",
                @class = "form-control"
            })
            @Html.DropDownList("area", new SelectList(string.Empty), "Select an area", new
            {
                @id = "area6",
                @class = "form-control"
            })

        </div>
        <div class="position">
            <button type="submit" class="btncustom btn-primary">Submit</button>
        </div>
    </form>

   
</body>

</html>

